---
// Import the necessary dependencies
import { Image } from "astro:assets";
import PrimaryCTA from "@components/ui/buttons/PrimaryCTA.astro";
import SecondaryCTA from "@components/ui/buttons/SecondaryCTA.astro";
import ReviewComponent from "@components/ui/blocks/ReviewComponent.astro";
import Icon from "@/components/ui/icons/Icon.astro";

// Define props from Astro
const {
  title,
  subTitle,
  subTitle2,
  schudele,
  primaryBtn,
  primaryBtnURL,
  secondaryBtn,
  secondaryBtnURL,
  withReview,
  avatars,
  starCount,
  rating,
  reviews,
  src,
  alt,
} = Astro.props;

// Define TypeScript interface for props
interface Props {
  title: string;
  subTitle?: string;
  subTitle2: string;
  schudele: Array<string>;
  primaryBtn?: string;
  primaryBtnURL?: string;
  secondaryBtn?: string;
  secondaryBtnURL?: string;
  withReview?: boolean;
  avatars?: Array<string>;
  starCount?: number;
  rating?: string;
  reviews?: string;
  src?: any;
  alt?: string;
}
---

<!-- Defining a grid container that holds all the content -->
<section
  class="mx-auto grid max-w-[85rem] gap-4 px-4 py-6 sm:px-6 md:grid-cols-2 md:items-center md:gap-8 lg:px-8 2xl:max-w-full"
>
  <!-- Title and description -->
  <div>
    <!-- Each h1 and p tag renders a portion of the title and subTitle defined above -->
    <h1
      class="dark:text-neutral-200 block text-balance text-3xl font-bold tracking-tight text-neutral-800 sm:text-4xl lg:text-6xl lg:leading-tight"
    >
      <!-- About Fragment: https://docs.astro.build/en/basics/astro-syntax/#fragments -->
      <Fragment set:html={title} />
    </h1>
    <p
      class="dark:text-neutral-400 mt-3 text-pretty text-lg leading-relaxed text-neutral-700 lg:w-4/5"
    >
      {subTitle}
    </p>
    <p
      class="dark:text-neutral-400 mt-3 text-pretty text-lg leading-relaxed text-neutral-700 lg:w-4/5"
    >
      {subTitle2}
    </p>

    <ul class="mt-6 space-y-2">
      {
        schudele.map((schu, i) => (
          <li class="mt-3 flex gap-2 text-pretty text-lg leading-relaxed text-neutral-700">
            <Icon name="checkCircle" class="h-4 w-6" />
            <span>{schu}</span>
          </li>
        ))
      }
    </ul>
    <!-- Action Button Section: This section includes two CTAs with their own styles and URL -->
    <div class="mt-7 grid w-full gap-3 sm:inline-flex">
      {primaryBtn && <PrimaryCTA title={primaryBtn} url={primaryBtnURL} />}
      {
        secondaryBtn && (
          <SecondaryCTA title={secondaryBtn} url={secondaryBtnURL} />
        )
      }
    </div>

    <!-- Review Section: This section presents avatars, review ratings and the number of reviews -->
    {
      withReview ? (
        <ReviewComponent
          avatars={avatars}
          starCount={starCount}
          rating={rating}
          reviews={reviews}
        />
      ) : (
        ""
      )
    }
  </div>
  <div class="flex w-full relative">
    <div class="w-full overflow-hidden md:-mt-24">
      <Image
        src={src}
        alt=""
        class="h-full w-full scale-75 rounded-full object-cover object-center"
        draggable={"false"}
        loading={"eager"}
        format={"avif"}
      />
    </div>
  </div>
</section>
